<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	                    http://www.springframework.org/schema/beans/spring-beans.xsd
	                    http://www.springframework.org/schema/context
	                    http://www.springframework.org/schema/context/spring-context-5.0.2.xsd
	                    http://www.springframework.org/schema/aop
	                    http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="t1" class="kr.hs.study.beans.TestBean1">
        <constructor-arg value="22" type="int"/>
    </bean>

    <bean id="t2" class="kr.hs.study.beans.TestBean1">
        <constructor-arg value="33.33" type="double"/>
    </bean>

    <bean id="t3" class="kr.hs.study.beans.TestBean1">
        <constructor-arg value="Jane55" type="java.lang.String"/>
    </bean>

    <bean id="t5" class="kr.hs.study.beans.TestBean1">
        <constructor-arg value="Jane66" type="java.lang.String" index="2"/>
        <constructor-arg value="66" type="int" index="0"/>
        <constructor-arg value="66.66" type="double" index="1"/>
    </bean>

    <!-- 2. DataBean2 객체 만들기 -->
    <!-- 2-1.  첫번째 방법      -->
    <bean  id="t6" class="kr.hs.study.beans.TestBean2">
        <constructor-arg>
            <bean class="kr.hs.study.beans.DataBean2"/>
        </constructor-arg>
    </bean>
    <!--  2-2. 두번째 방법      -->
    <bean  id="dd" class="kr.hs.study.beans.TestBean2"/>
    <bean  id="t6" class="kr.hs.study.beans.TestBean2">
        <constructor-arg ref="dd"/>
    </bean>




</beans>